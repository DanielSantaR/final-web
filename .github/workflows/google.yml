name: google

on:
  push:
    tags:
      - v*

env:
  GITHUB_SHA: ${{ github.sha }} 
  GITHUB_REF: ${{ github.ref }}
  PROJECT_ID:  ${{ secrets.PROJECT_ID }}
  IMAGE: br-cft
  REGISTRY_HOSTNAME: gcr.io
          
jobs:
  # Setup tests
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # Create the network to comunicate both containers
    - name: create network
      run: |
        docker network create gazelle
    # Exec docker-compose to build the containers in background
    - name: exec compose
      run: |
        docker-compose -f Docker-compose.ci.yml up --build -d
    # Execute the tests to verify that all is well
    - name: run tests
      run: |
        docker-compose -f Docker-compose.ci.yml exec -T cft python -m pytest
    # Obtain test coverage to keep track of how much code is covering the tests
    - name: get coverage
      run: |
        docker-compose -f Docker-compose.ci.yml exec -T cft python -m pytest --cov="."

  setup-build-publish-deploy:
    name: Setup, Build, and Publish
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_key: ${{ secrets.GCR_KEY }} 

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Build the Docker image
    - name: Build
      run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
        echo $TAG
        docker build -t "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        export TAG=`echo $GITHUB_REF | awk -F/ '{print $NF}'`
        echo $TAG
        docker push "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":"$TAG"
        docker tag "$REGISTRY_HOSTNAME"/"$IMAGE":"$TAG" "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":latest
        docker push "$REGISTRY_HOSTNAME"/"$PROJECT_ID"/"$IMAGE":latest